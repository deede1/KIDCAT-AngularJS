
<div class="content edit-options" id="hoursWidgetFields" style="display:none">
    <div class="fields">

        <!-- row 1 -->
        <div class="row">
            <h4>Hours Widget</h4>
        </div> 
      
        <div class="row customz">
            <p class="cell w-12-2">
                <label>Widget Size:</label>
            </p>
            <p class="cell w-12-1">
                Column: <select data-bind="options: WidgetSizeList, optionsText: 'Name' , optionsValue: 'id', value: selectedColumnSize" ></select>
            </p>
            <p class="cell w-12-1">
                Row: <select data-bind="options: WidgetSizeList, optionsText: 'Name', optionsValue: 'id', value: selectedRowSize"></select>
            </p>
        </div>
        <!-- row 2 -->
        <div class="row customz">
            <p class="cell w-12-2">
                <label style="color: red">* Widget Name:</label>
            </p>
            <p class="cell w-12-8">
                 <input type="text" data-bind="value: WidgetTitleName" />
            </p>
        </div>

        <!-- row 3 
        <div class="row customz">
            <p class="cell w-12-2">
                <label>Headline:</label>
            </p>
            <p class="cell w-12-8">
             @*   <input type="text" data-bind="value: WidgetHeadline" />*@
                   <textarea rows="10" cols="10" id="contentWidget_HLte" data-bind="value: WidgetHeadline"></textarea>
            </p>
        </div>-->

        <!-- row 4 -->
        <div class="row customz">
            <p class="cell w-12-2">
                <label>Hours Text:</label>
            </p>
            <div class="cell w-12-8">
                @*<textarea name="content" style="width:100%" data-bind="tinymce: WidgetHoursContent"></textarea>*@
                @*<textarea rows="10" cols="10" id="hoursText_te" data-bind="richText: WidgetHoursContent"></textarea>*@
                <textarea rows="10" cols="10" id="hoursWidget_te" data-bind="value: WidgetHoursContent"></textarea>
            </div>
        </div>

    </div>       
</div>


<script type="text/javascript">
    uxAdmin.WidgetManager.HoursWidget = (function () {

        var view = $('#hoursWidgetFields');
        var hWvm;
        
        var _editor, _html = '', _editor2, _html2 = '';
        var hoursWidgetVm = function () {
            this.WidgetId = ko.observable();
            this.WidgetTypeId = ko.observable();
            this.WidgetType = ko.observable();
            this.WidgetTitleName = ko.observable();
            //this.WidgetHeadline = ko.observable();
            this.WidgetHoursContent = ko.observable();
            this.WidgetSizeList = [{ Name: 1, id: 1 }, { Name: 2, id: 2 }, { Name: 3, id: 3 }, { Name: 4, id: 4 }, { Name: 5, id: 5 }, { Name: 6, id: 6 }, { Name: 7, id: 7 }, { Name: 8, id: 8 }, { Name: 9, id: 9 }, { Name: 10, id: 10 }, { Name: 11, id: 11 }, { Name: 12, id: 12}];
            this.selectedColumnSize = ko.observable();
            this.selectedRowSize = ko.observable();
        };
        var loadData = function (index) {
            uxAdmin.utilities.ajaxPostJson("SystemSettings/WidgetManager/GetWidgetData/", index, function (data) {

                var widgetData = $.parseJSON(data.JsonData);

                hWvm.WidgetId(data.WidgetId);
                hWvm.WidgetTypeId(widgetData.WidgetTypeId);
                hWvm.WidgetType(widgetData.WidgetType);
                hWvm.WidgetTitleName(widgetData.WidgetTitleName);
                //hWvm.WidgetHeadline(widgetData.WidgetHeadline);
                hWvm.selectedColumnSize(widgetData.selectedColumnSize);
                hWvm.selectedRowSize(widgetData.selectedRowSize);
                hWvm.WidgetHoursContent(widgetData.WidgetHoursContent);

                removeEditor();
                createEditor();
            });
        };
        var collectWidgetData = function () {

          //  hWvm.WidgetSizeList(null);
            //return ko.mapping.toJS(hWvm);

            document.getElementById('hoursWidget_te').innerHTML = _html = _editor.getData();
            hWvm.WidgetHoursContent(_html);
            //document.getElementById('contentWidget_HLte').innerHTML = _html2 = _editor2.getData();
            //hWvm.WidgetHeadline(_html2);
            //hWvm.WidgetSizeList([]);
            return ko.mapping.toJS(hWvm);
        };
        var createEditor = function () {
            if (_editor)
                return;

            // Create a new editor by replacing textarea with id = contentWidget_te, setting its value to html
            //var config = { language: 'en', toolbar: 'Full', height: '75px' };
            var config2 = { language: 'en', toolbar: 'Full2' };

            _editor = CKEDITOR.replace('hoursWidget_te', config2, _html);
            //_editor2 = CKEDITOR.replace('contentWidget_HLte', config, _html2);
        };
        var removeEditor = function () {
            if (!_editor)
                return;

            // Destroy the editor.
            _editor.destroy();
            _editor = null;

            //_editor2.destroy();
            //_editor2 = null;
        };
        var init = function (widgetProps, widgetTypeId, widgetType) {

            // create new instance of View Model
            hWvm = new hoursWidgetVm();

            // cache widget properties
            var indexKeyPair = widgetProps;

            // initialize existing/new widget
            if (indexKeyPair != null) {
                //edit: load data and create editor
                loadData(indexKeyPair);
            }
            else {
                //new: set creation properties into View Model
                hWvm.WidgetTypeId(widgetTypeId);
                hWvm.WidgetType(widgetType);
                //hWvm.WidgetTypeId(widgetTypeId);
                //hWvm.WidgetType(widgetType);

                //create editor
                removeEditor();
                createEditor();
            }

            // apply ko bindings
            ko.applyBindings(hWvm, view.get(0));
        };
        return {
            Init: init,
            loadData: loadData,
            CollectWidgetData: collectWidgetData
        };

    })();
</script>